#  Задача 3. Словарь синонимов
#  Одна библиотека поручила вам написать программу для оцифровки словарей синонимов. На вход в программу подаётся N пар слов. Каждое слово является
#  синонимом для своего парного слова. Реализуйте код, который составляет словарь синонимов (все слова в словаре
#  различны), затем запрашивает у пользователя слово и выводит на экран его синоним. Обеспечьте контроль ввода: если такого слова нет, выведите ошибку
#  и запросите слово ещё раз. При этом проверка не должна зависеть от регистра символов.
#  Пример
#  Введите количество пар слов: 3
#  Первая пара: Привет — Здравствуйте
#  Вторая пара: Печально — Грустно
#  Третья пара: Весело — Радостно
#  Введите слово: интересно
#  Такого слова в словаре нет.
#  Введите слово: здравствуйте
#  Синоним: Привет


synonym_dict = {}

par_count = int(input("Введите количество пар слов: ")) #Данной строкой я указываю диапазон ввода слов

for par in range(par_count): #данная строка перебирает слова в указанном диапазоне
    
    first_word, second_word = input(f'{par + 1} пара: ').lower().split(' - ') #данной строкой я принимаю на ввод первое и второе слово, где par+1 - чтобы вывод был о введении пары не с 0, lower для приведения символов в нижний регистр, а split для их разделения символом -
    
    synonym_dict[first_word] = second_word #добавляем в словарь 1 слово в качестве ключа - 2 в качестве значения 

    synonym_dict[second_word] = first_word ##добавляем в словарь 2 слово в качестве ключа - 1 в качестве значения 

while True: #пока значение правда
    word = input('Введите слово: ').lower() #создаём переменную word, которая вводится пользователем 
    if word in synonym_dict: #если word имеется в словаре
        print('Синоним: ', synonym_dict[word].capitalize()) #обращаемся к словарю с данными переменной word, и выводим её. Capitalize 1 символ выводит в верхнем регистре, а остальные в нижнем
        break #данный оператор прерывает цикл
    else:
        print('Такого слова нет в словаре!')